(env-data {
  "faucet-admin-keyset": ["faucet-admin-keyset"],
  "test1-keyset": ["test1"],
  "test2-keyset": ["test2"],
  "test3-keyset": ["test3"],
  "test4-keyset": ["test4"]
  })

(env-keys ["faucet-admin-keyset"])

;;Load Coin Contracts
(load "coin/coin-sig.pact")
(load "coin/coin.pact")

;;Deploy Faucet Contract without timestamp
(load "prodnet-faucet-wo-time.pact")

(use coin)
(use coin-faucet)

;;Fund FAUCET account
(test-capability (TRANSFER))
(credit 'coin-faucet (faucet-guard) 10000.0)

;;Create few entries
(use coin-faucet)
(create-and-request-coin 'test1 (read-keyset 'test1-keyset) 10.0)
(create-and-request-coin 'test2 (read-keyset 'test2-keyset) 15.0)
(create-and-request-coin 'test3 (read-keyset 'test3-keyset) 19.0)

;;Deploy Faucet Contract with Migration & Migrate
(load "prodnet-faucet-migrate.pact")
(expect "Data to be migrated"
  [ {"total-coins-earned": 10.0, "total-coins-returned": 0.0},
    {"total-coins-earned": 15.0, "total-coins-returned": 0.0},
    {"total-coins-earned": 19.0, "total-coins-returned": 0.0} ]
  (select history-table (constantly true)))

(expect "Migrated Data with last-request-time as EPOCH"
  [ {"last-request-time": (time "1970-01-01T00:00:00Z"), "total-coins-earned": 10.0, "total-coins-returned": 0.0},
    {"last-request-time": (time "1970-01-01T00:00:00Z"), "total-coins-earned": 15.0, "total-coins-returned": 0.0},
    {"last-request-time": (time "1970-01-01T00:00:00Z"), "total-coins-earned": 19.0, "total-coins-returned": 0.0} ]
(select history1-table (constantly true)))

;;Upgrade contract to remove migrate functions
(load "prodnet-faucet-time.pact")

;;Test requesting coins at different times

(env-chain-data {"block-time": (time "2019-07-22T12:00:00Z")})
(expect "Creates account and request coin"
  "Write succeeded"
  (create-and-request-coin 'test4 (read-keyset 'test4-keyset) 11.0))

;;Fails when more than one request is made in less than 30 minutes
(env-chain-data {"block-time": (time "2019-07-22T12:29:00Z")})
(expect-failure "29 minutes has passed" (request-coin 'test4 3.0))

;;Succeeds when a request is made after 30 minutes
(env-chain-data {"block-time": (time "2019-07-22T12:30:00Z")})
(expect "30 Minutes has passed" "Write succeeded" (request-coin 'test4 3.0))
